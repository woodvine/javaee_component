<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	version="2.4">
	<!-- log4j路径配置 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:config/log4j.properties</param-value>
	</context-param>

	<!-- Spring刷新Log4j配置文件变动的间隔,单位为毫秒 -->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>100000</param-value>
	</context-param>

	<!-- log4j日志监听器：本质在Servlet 容器启动时初始化log4j组件-->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>

	<!-- 自定义监听器：记录容器启动到停止的持续时间-->
	<listener>
		<listener-class>com.woodwang.common.TomcateCameraListener
		</listener-class>
	</listener>

	<!-- 初始化spring类加载器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- 初始化spring配置文件 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:config/spring.xml
		</param-value>
	</context-param>

	<!-- spring MVC Servlet -->
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:config/spring-mvc.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- SpringMVC拦截路径：所有的Controller类中的方法的请求前缀都是controller/* -->
	<!-- 控制层请求统一前缀的好处：所有的静态资源文件不受该Servlet处理-->
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>/controller/*</url-pattern>
	</servlet-mapping>

	<!--编码拦截器：解决中文参数乱码问题-->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>com.woodwang.common.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<!-- xss拦截器：校验用户的表单信息是否有xss威胁 -->
	<filter>
		<filter-name>xssFilter</filter-name>
		<filter-class>
			com.woodwang.common.XssCheckFilter
		</filter-class>
		<!--Filter开关：开发阶段可以设置为false关闭-->
		<init-param>
			<param-name>isEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- 是否进行header校验 -->
		<init-param>
			<param-name>isCheckHeader</param-name>
			<param-value>true</param-value>
		</init-param>
	    <!-- 是否进行parameter校验 -->		
		<init-param>
			<param-name>isCheckParameter</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- 是否中断请求 -->
		<init-param>
			<param-name>isInterruptChain</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<!-- 会话超时拦截器：判断执行操作是否是登陆用户 -->
	<filter>
		<filter-name>sessionChecker</filter-name>
		<filter-class>
			com.woodwang.common.SessionCheckFilter
		</filter-class>
		<init-param>
			<!--Filter开关：开发阶段可以设置为false关闭-->
			<param-name>isEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<!--系统登陆主页面：查询不到会话信息时跳转到该登陆主页面-->
			<param-name>indexPage</param-name>
			<param-value>index.jsp</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--XSS拦截器拦截路径配置：所有的控制层请求和jsp请求-->
	<filter-mapping>
		<filter-name>xssFilter</filter-name>
		<url-pattern>/controller/*</url-pattern>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<!--会话校验拦截器拦截路径配置：所有的控制层请求和jsp请求-->
	<filter-mapping>
		<filter-name>sessionChecker</filter-name>
		<url-pattern>/controller/*</url-pattern>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	
	<!-- 配置系统启动Servlet ：完成系统必要的初始化逻辑，加载全局信息，初始定时任务等-->
	<servlet>
		<servlet-name>initServlet</servlet-name>
		<servlet-class>
			com.woodwang.common.AppInitServlet
		</servlet-class>
		<load-on-startup>3</load-on-startup>
	</servlet>

	<!--应用的主页面-->
	<welcome-file-list>
		<welcome-file>/page/index.jsp</welcome-file>
	</welcome-file-list>

	<!-- 配置系统错误显示的页面:隐藏Tomcat服务器的信息 -->
	<error-page>
		<error-code>500</error-code>
		<location>/error/500.html</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/error/404.html</location>
	</error-page>
</web-app>
